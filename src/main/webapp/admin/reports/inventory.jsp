<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>

<!-- T√≥m t·∫Øt t·ªìn kho -->
<div class="stats-grid">
    <div class="stat-card">
        <div class="stat-value">${reportData.inventorySummary.totalItems}</div>
        <div class="stat-label">üì¶ T·ªïng V·∫≠t T∆∞</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-value">${reportData.inventorySummary.lowStockItems}</div>
        <div class="stat-label">‚ö†Ô∏è S·∫Øp H·∫øt H√†ng</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-value">${reportData.inventorySummary.outOfStockItems}</div>
        <div class="stat-label">‚ùå H·∫øt H√†ng</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-value">
            <fmt:formatNumber value="${reportData.inventorySummary.totalValue}" type="currency" currencySymbol="‚Ç´" />
        </div>
        <div class="stat-label">üí∞ T·ªïng Gi√° Tr·ªã</div>
    </div>
</div>

<!-- C·∫£nh b√°o v·∫≠t t∆∞ s·∫Øp h·∫øt -->
<c:if test="${reportData.inventorySummary.lowStockItems > 0}">
    <div class="alert alert-error">
        <strong>‚ö†Ô∏è C·∫£nh B√°o:</strong> C√≥ ${reportData.inventorySummary.lowStockItems} v·∫≠t t∆∞ s·∫Øp h·∫øt h√†ng c·∫ßn b·ªï sung!
    </div>
</c:if>

<!-- Danh s√°ch v·∫≠t t∆∞ s·∫Øp h·∫øt -->
<div class="data-table">
    <h3 class="chart-title">‚ö†Ô∏è V·∫≠t T∆∞ S·∫Øp H·∫øt H√†ng</h3>
    <table>
        <thead>
            <tr>
                <th>V·∫≠t T∆∞</th>
                <th>S·ªë L∆∞·ª£ng Hi·ªán T·∫°i</th>
                <th>M·ª©c T·ªëi Thi·ªÉu</th>
                <th>ƒê∆°n Gi√°</th>
                <th>Tr·∫°ng Th√°i</th>
                <th>H√†nh ƒê·ªông</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="item" items="${reportData.lowStockItems}" varStatus="status">
                <tr>
                    <td>
                        <strong>${item.name}</strong>
                    </td>
                    <td>
                        <span class="stat-value">${item.quantity}</span>
                    </td>
                    <td>
                        ${item.minStock}
                    </td>
                    <td>
                        <fmt:formatNumber value="${item.unitPrice}" type="currency" currencySymbol="‚Ç´" />
                    </td>
                    <td>
                        <c:choose>
                            <c:when test="${item.quantity == 0}">
                                <span style="color: #e74c3c; font-weight: bold;">‚ùå H·∫æT H√ÄNG</span>
                            </c:when>
                            <c:when test="${item.quantity <= item.minStock}">
                                <span style="color: #f39c12; font-weight: bold;">‚ö†Ô∏è S·∫ÆP H·∫æT</span>
                            </c:when>
                            <c:otherwise>
                                <span style="color: #27ae60;">‚úÖ ƒê·ª¶ H√ÄNG</span>
                            </c:otherwise>
                        </c:choose>
                    </td>
                    <td>
                        <c:choose>
                            <c:when test="${item.quantity == 0}">
                                <button class="btn-export excel" style="background: #e74c3c; padding: 5px 10px; font-size: 12px;">
                                    üö® Nh·∫≠p Kh·∫©n C·∫•p
                                </button>
                            </c:when>
                            <c:otherwise>
                                <button class="btn-export excel" style="background: #f39c12; padding: 5px 10px; font-size: 12px;">
                                    üì¶ Nh·∫≠p Th√™m
                                </button>
                            </c:otherwise>
                        </c:choose>
                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
</div>

<!-- Bi·ªÉu ƒë·ªì ph√¢n b·ªë t·ªìn kho -->
<div class="chart-container">
    <h3 class="chart-title">üìä Ph√¢n B·ªë T·ªìn Kho Theo Tr·∫°ng Th√°i</h3>
    <div class="chart-wrapper">
        <canvas id="inventoryStatusChart"></canvas>
    </div>
</div>

<!-- Xu h∆∞·ªõng nh·∫≠p/xu·∫•t kho -->
<div class="chart-container">
    <h3 class="chart-title">üìà Xu H∆∞·ªõng Nh·∫≠p/Xu·∫•t Kho (30 ng√†y g·∫ßn nh·∫•t)</h3>
    <div class="chart-wrapper">
        <canvas id="stockMovementChart"></canvas>
    </div>
</div>

<!-- Chi ti·∫øt giao d·ªãch kho -->
<div class="data-table">
    <h3 class="chart-title">üìã Chi Ti·∫øt Giao D·ªãch Kho</h3>
    <table>
        <thead>
            <tr>
                <th>Ng√†y</th>
                <th>V·∫≠t T∆∞</th>
                <th>Lo·∫°i</th>
                <th>S·ªë L∆∞·ª£ng</th>
                <th>ƒê∆°n Gi√°</th>
                <th>Th√†nh Ti·ªÅn</th>
                <th>Ghi Ch√∫</th>
            </tr>
        </thead>
        <tbody>
            <c:forEach var="movement" items="${reportData.stockMovements}" varStatus="status">
                <tr>
                    <td>
                        <fmt:formatDate value="${movement.date}" pattern="dd/MM/yyyy" />
                    </td>
                    <td>
                        <strong>${movement.itemName}</strong>
                    </td>
                    <td>
                        <c:choose>
                            <c:when test="${movement.type == 'IN'}">
                                <span style="color: #27ae60; font-weight: bold;">üì• NH·∫¨P</span>
                            </c:when>
                            <c:otherwise>
                                <span style="color: #e74c3c; font-weight: bold;">üì§ XU·∫§T</span>
                            </c:otherwise>
                        </c:choose>
                    </td>
                    <td>
                        <span class="stat-value">${movement.quantity}</span>
                    </td>
                    <td>
                        <fmt:formatNumber value="${movement.unitPrice}" type="currency" currencySymbol="‚Ç´" />
                    </td>
                    <td>
                        <fmt:formatNumber value="${movement.totalAmount}" type="currency" currencySymbol="‚Ç´" />
                    </td>
                    <td>
                        <c:choose>
                            <c:when test="${not empty movement.notes}">
                                ${movement.notes}
                            </c:when>
                            <c:otherwise>
                                <span style="color: #7f8c8d; font-style: italic;">Kh√¥ng c√≥ ghi ch√∫</span>
                            </c:otherwise>
                        </c:choose>
                    </td>
                </tr>
            </c:forEach>
        </tbody>
    </table>
</div>

<!-- T√≥m t·∫Øt gi√° tr·ªã t·ªìn kho -->
<div class="chart-container">
    <h3 class="chart-title">üí∞ Ph√¢n T√≠ch Gi√° Tr·ªã T·ªìn Kho</h3>
    <div class="chart-wrapper">
        <canvas id="inventoryValueChart"></canvas>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Bi·ªÉu ƒë·ªì tr·∫°ng th√°i t·ªìn kho
    const inventoryStatusCtx = document.getElementById('inventoryStatusChart').getContext('2d');
    const inventoryStatusData = {
        'ƒê·ªß h√†ng': ${reportData.inventorySummary.totalItems - reportData.inventorySummary.lowStockItems - reportData.inventorySummary.outOfStockItems},
        'S·∫Øp h·∫øt': ${reportData.inventorySummary.lowStockItems},
        'H·∫øt h√†ng': ${reportData.inventorySummary.outOfStockItems}
    };
    
    new Chart(inventoryStatusCtx, {
        type: 'doughnut',
        data: {
            labels: Object.keys(inventoryStatusData),
            datasets: [{
                data: Object.values(inventoryStatusData),
                backgroundColor: [
                    '#27ae60', // ƒê·ªß h√†ng
                    '#f39c12', // S·∫Øp h·∫øt
                    '#e74c3c'  // H·∫øt h√†ng
                ],
                borderWidth: 2,
                borderColor: '#fff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
    
    // Bi·ªÉu ƒë·ªì xu h∆∞·ªõng nh·∫≠p/xu·∫•t
    const stockMovementCtx = document.getElementById('stockMovementChart').getContext('2d');
    const stockMovementData = [
        <c:forEach var="movement" items="${reportData.stockMovements}" varStatus="status">
        {
            date: '${movement.date}',
            in: ${movement.type == 'IN' ? movement.quantity : 0},
            out: ${movement.type == 'OUT' ? movement.quantity : 0}
        }<c:if test="${!status.last}">,</c:if>
        </c:forEach>
    ];
    
    new Chart(stockMovementCtx, {
        type: 'bar',
        data: {
            labels: stockMovementData.map(item => item.date),
            datasets: [
                {
                    label: 'Nh·∫≠p kho',
                    data: stockMovementData.map(item => item.in),
                    backgroundColor: '#27ae60',
                    borderColor: '#229954',
                    borderWidth: 1
                },
                {
                    label: 'Xu·∫•t kho',
                    data: stockMovementData.map(item => item.out),
                    backgroundColor: '#e74c3c',
                    borderColor: '#c0392b',
                    borderWidth: 1
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top'
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
    
    // Bi·ªÉu ƒë·ªì gi√° tr·ªã t·ªìn kho
    const inventoryValueCtx = document.getElementById('inventoryValueChart').getContext('2d');
    const inventoryValueData = [
        <c:forEach var="item" items="${reportData.inventorySummary}" varStatus="status">
        {
            name: '${item.name}',
            value: ${item.value}
        }<c:if test="${!status.last}">,</c:if>
        </c:forEach>
    ];
    
    new Chart(inventoryValueCtx, {
        type: 'pie',
        data: {
            labels: inventoryValueData.map(item => item.name),
            datasets: [{
                data: inventoryValueData.map(item => item.value),
                backgroundColor: [
                    '#3498db',
                    '#e74c3c',
                    '#f39c12',
                    '#27ae60',
                    '#9b59b6',
                    '#1abc9c'
                ],
                borderWidth: 2,
                borderColor: '#fff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
});
</script>
